{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AlertdialogComponent } from '../alertdialog/alertdialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nfunction HomeComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \"Stay organized and boost your productivity with TaskTracker\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function HomeComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.showTaskCreation());\n    });\n    i0.ɵɵtext(1, \"Get Started\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_12_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \"Task is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_12_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HomeComponent_div_12_div_7_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.todoForm.get(\"task\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction HomeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 1);\n    i0.ɵɵelementStart(2, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_12_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmit());\n    });\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"label\");\n    i0.ɵɵtext(5, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 12);\n    i0.ɵɵtemplate(7, HomeComponent_div_12_div_7_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 11)(9, \"label\");\n    i0.ɵɵtext(10, \"Due Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 11)(13, \"label\");\n    i0.ɵɵtext(14, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"select\", 14)(16, \"option\", 15);\n    i0.ɵɵtext(17, \"Select Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"option\", 16);\n    i0.ɵɵtext(19, \"Low\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"option\", 17);\n    i0.ɵɵtext(21, \"Medium\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"option\", 18);\n    i0.ɵɵtext(23, \"High\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(24, \"br\");\n    i0.ɵɵelementStart(25, \"button\", 19);\n    i0.ɵɵtext(26, \"Add Task\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"required\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r2.todoForm.get(\"task\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx_r2.todoForm.get(\"task\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx_r2.todoForm.get(\"task\")) == null ? null : tmp_1_0.touched)));\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder, dialog) {\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.taskCreationVisible = false;\n    this.btnvisible = true;\n  }\n  ngOnInit() {\n    this.todoForm = this.formBuilder.group({\n      task: ['', Validators.required],\n      dueDate: [''],\n      priority: ['']\n    });\n  }\n  showTaskCreation() {\n    this.taskCreationVisible = true;\n    this.btnvisible = false;\n  }\n  get task() {\n    return this.todoForm.get('task');\n  }\n  isFormValid() {\n    const formControls = this.todoForm.controls;\n    for (const controlName in formControls) {\n      if (formControls.hasOwnProperty(controlName) && formControls[controlName].value === '') {\n        return false;\n      }\n    }\n    return true;\n  }\n  openAlert() {\n    this.dialogRef = this.dialog.open(AlertdialogComponent, {\n      width: '300px',\n      data: {\n        message: 'Please fill all fields.'\n      } // Pass any additional data to the dialog\n    });\n  }\n\n  onSubmit() {\n    this.openAlert();\n    if (!this.isFormValid()) {\n      this.openAlert();\n      return;\n    }\n    console.log(this.todoForm.value);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"card\", \"shadow\", \"p-2\", \"mb-5\", \"bg-white\", \"rounded\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-divider\"], [\"class\", \"card-text\", 4, \"ngIf\"], [\"class\", \"get-started-button\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"card-text\"], [1, \"get-started-button\", 3, \"click\"], [\"formGroup\", \"todoForm\", 1, \"mat-form\", 3, \"ngSubmit\"], [1, \"mat-form-field\"], [\"type\", \"text\", \"formControlName\", \"task\", \"placeholder\", \"Enter a new task\", 1, \"mat-input\", 3, \"required\"], [\"type\", \"date\", \"formControlName\", \"dueDate\", \"placeholder\", \"Due Date\", 1, \"mat-input\"], [\"formControlName\", \"priority\", 1, \"mat-select\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"type\", \"submit\", 1, \"get-started-button\", \"align-right\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"h5\", 3);\n      i0.ɵɵtext(6, \"TaskTracker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\")(8, \"hr\", 4)(9, \"br\");\n      i0.ɵɵtemplate(10, HomeComponent_p_10_Template, 2, 0, \"p\", 5);\n      i0.ɵɵtemplate(11, HomeComponent_button_11_Template, 2, 0, \"button\", 6);\n      i0.ɵɵtemplate(12, HomeComponent_div_12_Template, 27, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnvisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnvisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.taskCreationVisible);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\".container[_ngcontent-%COMP%] {\\r\\n    background: linear-gradient(to bottom, #ffffff, #e6e6ff); \\r\\n    height: 100vh;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    width: 100%;\\r\\n    align-items: center;\\r\\n    padding: 0%;\\r\\n    \\r\\n  }\\r\\n  body[_ngcontent-%COMP%]{\\r\\n    background: linear-gradient(to bottom, #ffffff, #e6e6ff); \\r\\n  }\\r\\n  \\r\\n  .card[_ngcontent-%COMP%] {\\r\\n    background-color: #ffffff;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\r\\n    padding: 18px;\\r\\n    width: 650px; \\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  .app-name[_ngcontent-%COMP%] {\\r\\n    font-size: 28px;\\r\\n    margin-bottom: 16px;\\r\\n    color: #6c63ff; \\r\\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n  \\r\\n  .card-content[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n    margin-bottom: 32px;\\r\\n    color: #666666;\\r\\n  }\\r\\n  \\r\\n  .get-started-button[_ngcontent-%COMP%] {\\r\\n    background-color: #a98ff3; \\r\\n    color: #ffffff;\\r\\n    border: none;\\r\\n    box-shadow: #e6e6ff;\\r\\n    border-radius: 5px;\\r\\n\\r\\n    padding: 12px 24px;\\r\\n    font-size: 16px;\\r\\n    cursor: pointer;\\r\\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\\r\\n    transition: background-color 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  .task-creation-area[_ngcontent-%COMP%] {\\r\\n    margin-top: 24px;\\r\\n  }\\r\\n\\r\\n  .card-title[_ngcontent-%COMP%] {\\r\\n    font-size: 30px;\\r\\n    font-weight: bold;\\r\\n    color: #8660eedb; \\r\\n    margin-bottom: 10px;\\r\\n    font-weight: 500;\\r\\n    text-transform: none;\\r\\n    shape-margin: 7;\\r\\n    text-shadow: #0b0b57;\\r\\n    text-shadow: #3d3dae;\\r\\n    box-shadow: #a98ff3;\\r\\n  font-family:  'Gill Sans', 'Gill Sans MT';\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n  .mat-form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: flex-start;\\r\\n  }\\r\\n  \\r\\n  .mat-form-field[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border-color: #a98ff3;\\r\\n    margin-bottom: 16px;\\r\\n    text-align: left;\\r\\n  }\\r\\n  \\r\\n  .mat-input[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border: #a98ff3;\\r\\n    border-style: solid;\\r\\n    border-radius: 4px;\\r\\n    outline: #a98ff3;\\r\\n    border-color: #a98ff3;\\r\\n    color: #0000006d;\\r\\n\\r\\n    \\r\\n    padding: 8px;\\r\\n  }\\r\\n  \\r\\n  .mat-input[_ngcontent-%COMP%]:focus {\\r\\n    outline: none;\\r\\n    box-shadow: 0 0 0 2px #a98ff3;\\r\\n  }\\r\\n  \\r\\n  .mat-select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border: none;\\r\\n    color: #0000006d;\\r\\n    border-radius: 4px;\\r\\n    outline: #a98ff3;\\r\\n    border: #a98ff3;\\r\\n    border-style: solid;\\r\\n    border-radius: 4px;\\r\\n    outline: #a98ff3;\\r\\n    border-color: #a98ff3;\\r\\n    \\r\\n    padding: 8px;\\r\\n  }\\r\\n  \\r\\n  .mat-select[_ngcontent-%COMP%]:focus {\\r\\n    outline:  #a98ff3;\\r\\n    \\r\\n    box-shadow: 0 0 0 2px #a98ff3;\\r\\n  }\\r\\n  \\r\\n  .mat-error[_ngcontent-%COMP%] {\\r\\n    color: red;\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n  .mat-form-field[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n    color: #a98ff3;\\r\\n    font-size: 18px;\\r\\n    font-weight:15;\\r\\n    text-align: left;\\r\\n    font-family:'Gill Sans', 'Gill Sans MT';\\r\\n\\r\\n  }\\r\\n  .align-right[_ngcontent-%COMP%] {\\r\\n    text-align: right;\\r\\n  }\\r\\n\\r\\n  .card-divider[_ngcontent-%COMP%] {\\r\\n    \\r\\n    border-top: 1px solid rgba(180, 137, 248, 0.936); \\r\\n    margin: 1px 0; \\r\\n  }\\r\\n  \\r\\n  .error-message[_ngcontent-%COMP%] {\\r\\n    color: red; \\r\\n    font-size: 14px; \\r\\n    \\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3REFBd0QsRUFBRSxtQ0FBbUM7SUFDN0YsYUFBYTtJQUNiLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsV0FBVztJQUNYLG1CQUFtQjtJQUNuQixXQUFXOztFQUViO0VBQ0E7SUFDRSx3REFBd0Q7RUFDMUQ7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLHdDQUF3QztJQUN4QyxhQUFhO0lBQ2IsWUFBWSxFQUFFLCtCQUErQjtJQUM3QyxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGNBQWMsRUFBRSx1QkFBdUI7SUFDdkMsMkNBQTJDO0VBQzdDOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixjQUFjO0VBQ2hCOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsdUJBQXVCO0lBQ2xELGNBQWM7SUFDZCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGtCQUFrQjs7SUFFbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0lBQ2Ysd0NBQXdDO0lBQ3hDLHNDQUFzQztFQUN4Qzs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsZ0JBQWdCLEVBQUUsdUJBQXVCO0lBQ3pDLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLG1CQUFtQjtFQUNyQix5Q0FBeUM7SUFDdkMsa0JBQWtCO0VBQ3BCOzs7O0VBSUEsbUVBQW1FO0VBQ25FO0lBQ0UsYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLG1CQUFtQjtJQUNuQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLHFCQUFxQjtJQUNyQixnQkFBZ0I7O0lBRWhCLCtCQUErQjtJQUMvQixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsNkJBQTZCO0VBQy9COztFQUVBO0lBQ0UsV0FBVztJQUNYLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLCtCQUErQjtJQUMvQixZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxpQkFBaUI7O0lBRWpCLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7OztFQUlBO0lBQ0UsY0FBYztJQUNkLGVBQWU7SUFDZixjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLHVDQUF1Qzs7RUFFekM7RUFDQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTs7SUFFRSxnREFBZ0QsRUFBRSx5Q0FBeUM7SUFDM0YsYUFBYSxFQUFFLGdDQUFnQztFQUNqRDs7RUFFQTtJQUNFLFVBQVUsRUFBRSxxREFBcUQ7SUFDakUsZUFBZSxFQUFFLG9EQUFvRDtJQUNyRSw2Q0FBNkM7RUFDL0MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNmZmZmZmYsICNlNmU2ZmYpOyAvKiBXaGl0ZSB0byBsaWdodCB2aW9sZXQgZ3JhZGllbnQgKi9cclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAwJTtcclxuICAgIFxyXG4gIH1cclxuICBib2R5e1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgI2ZmZmZmZiwgI2U2ZTZmZik7IFxyXG4gIH1cclxuICBcclxuICAuY2FyZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIHBhZGRpbmc6IDE4cHg7XHJcbiAgICB3aWR0aDogNjUwcHg7IC8qIEFkanVzdCB0aGUgd2lkdGggYXMgbmVlZGVkICovXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5hcHAtbmFtZSB7XHJcbiAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgY29sb3I6ICM2YzYzZmY7IC8qIExpZ2h0IHZpb2xldCBjb2xvciAqL1xyXG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtY29udGVudCB7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xyXG4gICAgY29sb3I6ICM2NjY2NjY7XHJcbiAgfVxyXG4gIFxyXG4gIC5nZXQtc3RhcnRlZC1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2E5OGZmMzsgLyogTGlnaHQgdmlvbGV0IGNvbG9yICovXHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJveC1zaGFkb3c6ICNlNmU2ZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcblxyXG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm94LXNoYWRvdzogMCAycHggNHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlO1xyXG4gIH1cclxuICBcclxuICAudGFzay1jcmVhdGlvbi1hcmVhIHtcclxuICAgIG1hcmdpbi10b3A6IDI0cHg7XHJcbiAgfVxyXG5cclxuICAuY2FyZC10aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGNvbG9yOiAjODY2MGVlZGI7IC8qIExpZ2h0IHZpb2xldCBjb2xvciAqL1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxuICAgIHNoYXBlLW1hcmdpbjogNztcclxuICAgIHRleHQtc2hhZG93OiAjMGIwYjU3O1xyXG4gICAgdGV4dC1zaGFkb3c6ICMzZDNkYWU7XHJcbiAgICBib3gtc2hhZG93OiAjYTk4ZmYzO1xyXG4gIGZvbnQtZmFtaWx5OiAgJ0dpbGwgU2FucycsICdHaWxsIFNhbnMgTVQnO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICBcclxuICBcclxuICAvKiBBZGRpdGlvbmFsIHN0eWxlcyBmb3IgdGhlIHRhc2sgY3JlYXRpb24gYXJlYSwgYWRqdXN0IGFzIG5lZWRlZCAqL1xyXG4gIC5tYXQtZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gIH1cclxuICBcclxuICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sb3I6ICNhOThmZjM7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1pbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogI2E5OGZmMztcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBvdXRsaW5lOiAjYTk4ZmYzO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYTk4ZmYzO1xyXG4gICAgY29sb3I6ICMwMDAwMDA2ZDtcclxuXHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjYTk4ZmYzOyAqL1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gIH1cclxuICBcclxuICAubWF0LWlucHV0OmZvY3VzIHtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgMCAycHggI2E5OGZmMztcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1zZWxlY3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBjb2xvcjogIzAwMDAwMDZkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgb3V0bGluZTogI2E5OGZmMztcclxuICAgIGJvcmRlcjogI2E5OGZmMztcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBvdXRsaW5lOiAjYTk4ZmYzO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjYTk4ZmYzO1xyXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogI2E5OGZmMzsgKi9cclxuICAgIHBhZGRpbmc6IDhweDtcclxuICB9XHJcbiAgXHJcbiAgLm1hdC1zZWxlY3Q6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogICNhOThmZjM7XHJcbiAgICBcclxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCAjYTk4ZmYzO1xyXG4gIH1cclxuICBcclxuICAubWF0LWVycm9yIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIC5tYXQtZm9ybS1maWVsZCBsYWJlbCB7XHJcbiAgICBjb2xvcjogI2E5OGZmMztcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIGZvbnQtd2VpZ2h0OjE1O1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIGZvbnQtZmFtaWx5OidHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJztcclxuXHJcbiAgfVxyXG4gIC5hbGlnbi1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB9XHJcblxyXG4gIC5jYXJkLWRpdmlkZXIge1xyXG4gICAgXHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgxODAsIDEzNywgMjQ4LCAwLjkzNik7IC8qIFJlcGxhY2Ugd2l0aCB5b3VyIGRlc2lyZWQgbGluZSBjb2xvciAqL1xyXG4gICAgbWFyZ2luOiAxcHggMDsgLyogQWRqdXN0IHRoZSBtYXJnaW4gYXMgbmVlZGVkICovXHJcbiAgfVxyXG4gIFxyXG4gIC5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiByZWQ7IC8qIFNldCB0aGUgZGVzaXJlZCB0ZXh0IGNvbG9yIGZvciB0aGUgZXJyb3IgbWVzc2FnZSAqL1xyXG4gICAgZm9udC1zaXplOiAxNHB4OyAvKiBTZXQgdGhlIGRlc2lyZWQgZm9udCBzaXplIGZvciB0aGUgZXJyb3IgbWVzc2FnZSAqL1xyXG4gICAgLyogQWRkIGFueSBvdGhlciBkZXNpcmVkIHN0eWxpbmcgcHJvcGVydGllcyAqL1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","AlertdialogComponent","i0","HomeComponent","constructor","formBuilder","dialog","ngOnInit","todoForm","group","task","required","dueDate","priority","showTaskCreation","taskCreationVisible","btnvisible","get","isFormValid","formControls","controls","controlName","hasOwnProperty","value","openAlert","dialogRef","open","width","data","message","onSubmit","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\home\\home.component.ts","C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertdialogComponent } from '../alertdialog/alertdialog.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements  OnInit{\n  dialogRef!: MatDialogRef<any>;\n\n  taskCreationVisible: boolean = false;\n  btnvisible:boolean=true;\n  todoForm!: FormGroup;\n                constructor(private formBuilder: FormBuilder, private dialog: MatDialog)\n                {\n\n                }\n                ngOnInit() {\n                      this.todoForm = this.formBuilder.group({\n                        task: ['', Validators.required],\n                        dueDate: [''],\n                        priority: [''],\n                       \n                      });\n                }\n  showTaskCreation() {\n    this.taskCreationVisible = true;\n    this.btnvisible=false;\n  }\n\n  get task() {\n    return this.todoForm.get('task');\n  }\n\n  isFormValid() {\n    const formControls = this.todoForm.controls;\n    for (const controlName in formControls) {\n      if (formControls.hasOwnProperty(controlName) && formControls[controlName].value === '') {\n        return false;\n      }\n    }\n    return true;\n  }\n  \n\n  openAlert() {\n    this.dialogRef = this.dialog.open(AlertdialogComponent, {\n      width: '300px', // Customize the width as per your needs\n      data: { message: 'Please fill all fields.' } // Pass any additional data to the dialog\n    });\n  }\n\n  onSubmit(){\n    this.openAlert();\n    if (!this.isFormValid()) {\n      this.openAlert();\n      return;\n    }\n    console.log(this.todoForm.value);\n  }\n\n}\n","<body>\n<div class=\"container\">\n    <div class=\"card shadow p-2 mb-5 bg-white rounded\">\n        \n        \n      <div class=\"card-body\"><br>\n        <h5 class=\"card-title\">TaskTracker</h5><br>\n        <hr class=\"card-divider\"> \n       <br>\n        <p  *ngIf=\"btnvisible\" class=\"card-text\">Stay organized and boost your productivity with TaskTracker</p>\n        <button class=\"get-started-button\" *ngIf=\"btnvisible\" (click)=\"showTaskCreation()\">Get Started</button>\n        <div *ngIf=\"taskCreationVisible\">\n            \n            <div class=\"card shadow p-2 mb-5 bg-white rounded\">\n                \n            </div>\n            \n           \n\n\n\n <form formGroup=\"todoForm\" (ngSubmit)=\"onSubmit()\" class=\"mat-form\">\n   <div class=\"mat-form-field\">\n    <label>Task</label>\n     <input type=\"text\" formControlName=\"task\" placeholder=\"Enter a new task\" class=\"mat-input\" [required]=\"true\" >\n     <div *ngIf=\"todoForm.get('task')?.invalid && (todoForm.get('task')?.dirty || todoForm.get('task')?.touched)\">\n        <div *ngIf=\"todoForm.get('task')?.errors?.['required']\" class=\"error-message\">Task is required</div>\n      </div>\n      \n      \n   </div>\n \n   <div class=\"mat-form-field\">\n    <label>Due Date </label>\n     <input type=\"date\" formControlName=\"dueDate\" placeholder=\"Due Date\" class=\"mat-input\">\n   </div>\n \n   <div class=\"mat-form-field\">\n    <label>Priority</label>\n     <select formControlName=\"priority\" class=\"mat-select\">\n       <option value=\"\" disabled selected>Select Priority</option>\n       <option value=\"low\">Low</option>\n       <option value=\"medium\">Medium</option>\n       <option value=\"high\">High</option>\n     </select>\n   </div>\n \n   \n <br>\n   <button type=\"submit\" class=\"get-started-button align-right\">Add Task</button>\n </form>\n \n        </div>\n      </div>\n\n    </div>\n  </div>\n</body>\n  \n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}