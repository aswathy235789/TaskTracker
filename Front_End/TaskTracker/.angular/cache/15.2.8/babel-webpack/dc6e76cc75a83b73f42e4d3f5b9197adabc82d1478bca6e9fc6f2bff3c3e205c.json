{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AlertdialogComponent } from '../alertdialog/alertdialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nfunction HomeComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1, \"Stay organized and boost your productivity with TaskTracker\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function HomeComponent_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showTaskCreation());\n    });\n    i0.ɵɵtext(1, \"Get Started\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementStart(3, \"button\", 10);\n    i0.ɵɵtext(4, \"View Tasks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 10);\n    i0.ɵɵtext(6, \"Add Tasks\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction HomeComponent_div_13_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \"Task is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_div_13_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, HomeComponent_div_13_div_6_div_1_Template, 2, 0, \"div\", 21);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.todoForm.get(\"task\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction HomeComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 11);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_13_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmit());\n    });\n    i0.ɵɵelementStart(2, \"div\", 12)(3, \"label\");\n    i0.ɵɵtext(4, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 13);\n    i0.ɵɵtemplate(6, HomeComponent_div_13_div_6_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12)(8, \"label\");\n    i0.ɵɵtext(9, \"Due Date \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 12)(12, \"label\");\n    i0.ɵɵtext(13, \"Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"select\", 15)(15, \"option\", 16);\n    i0.ɵɵtext(16, \"Select Priority\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"option\", 17);\n    i0.ɵɵtext(18, \"Low\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 18);\n    i0.ɵɵtext(20, \"Medium\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"option\", 19);\n    i0.ɵɵtext(22, \"High\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(23, \"br\");\n    i0.ɵɵelementStart(24, \"button\", 20);\n    i0.ɵɵtext(25, \"Add Task\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"required\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r3.todoForm.get(\"task\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx_r3.todoForm.get(\"task\")) == null ? null : tmp_1_0.dirty) || ((tmp_1_0 = ctx_r3.todoForm.get(\"task\")) == null ? null : tmp_1_0.touched)));\n  }\n}\nexport class HomeComponent {\n  constructor(formBuilder, dialog) {\n    this.formBuilder = formBuilder;\n    this.dialog = dialog;\n    this.taskCreationVisible = false;\n    this.actionVisible = false;\n    this.btnvisible = true;\n  }\n  ngOnInit() {\n    this.todoForm = this.formBuilder.group({\n      task: ['', Validators.required],\n      dueDate: [''],\n      priority: ['']\n    });\n  }\n  showTaskCreation() {\n    // this.taskCreationVisible = true;\n    this.actionVisible = true;\n    this.btnvisible = false;\n  }\n  get task() {\n    return this.todoForm.get('task');\n  }\n  isFormValid() {\n    const formControls = this.todoForm.controls;\n    for (const controlName in formControls) {\n      if (formControls.hasOwnProperty(controlName) && formControls[controlName].value === '') {\n        return false;\n      }\n    }\n    return true;\n  }\n  openAlert() {\n    this.dialogRef = this.dialog.open(AlertdialogComponent, {\n      width: '300px',\n      data: {\n        message: 'Please fill all fields.'\n      } // Pass any additional data to the dialog\n    });\n  }\n\n  onSubmit() {\n    this.openAlert();\n    if (!this.isFormValid()) {\n      this.openAlert();\n      return;\n    }\n    console.log(this.todoForm.value);\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialog));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\", \"shadow\", \"p-2\", \"mb-5\", \"bg-white\", \"rounded\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-divider\"], [\"class\", \"card-text\", 4, \"ngIf\"], [\"class\", \"action-button\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"card-text\"], [1, \"action-button\", 3, \"click\"], [1, \"get-started-button\", \"align-right\"], [\"formGroup\", \"todoForm\", 1, \"mat-form\", 3, \"ngSubmit\"], [1, \"mat-form-field\"], [\"type\", \"text\", \"formControlName\", \"task\", \"placeholder\", \"Enter a new task\", 1, \"mat-input\", 3, \"required\"], [\"type\", \"date\", \"formControlName\", \"dueDate\", \"placeholder\", \"Due Date\", 1, \"mat-input\"], [\"formControlName\", \"priority\", 1, \"mat-select\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"type\", \"submit\", 1, \"get-started-button\", \"align-right\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2);\n      i0.ɵɵelement(4, \"br\");\n      i0.ɵɵelementStart(5, \"h5\", 3);\n      i0.ɵɵtext(6, \"TaskTracker\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\")(8, \"hr\", 4)(9, \"br\");\n      i0.ɵɵtemplate(10, HomeComponent_p_10_Template, 2, 0, \"p\", 5);\n      i0.ɵɵtemplate(11, HomeComponent_button_11_Template, 2, 0, \"button\", 6);\n      i0.ɵɵtemplate(12, HomeComponent_div_12_Template, 7, 0, \"div\", 7);\n      i0.ɵɵtemplate(13, HomeComponent_div_13_Template, 26, 2, \"div\", 7);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnvisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnvisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.actionVisible);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.taskCreationVisible);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 111:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(167:5) C:\\\\\\\\Users\\\\\\\\235789\\\\\\\\Documents\\\\\\\\angular\\\\\\\\TaskTracker\\\\\\\\TaskTracker\\\\\\\\src\\\\\\\\app\\\\\\\\home\\\\\\\\home.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 165 | \\\\u001b[39m    box-shadow\\\\u001b[33m:\\\\u001b[39m 0 2px 4px \\\\u001b[36mrgba\\\\u001b[39m\\\\u001b[36m(0, 0, 0, 0.2)\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 166 | \\\\u001b[39m    transition\\\\u001b[33m:\\\\u001b[39m background-color 0.3s ease\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 167 | \\\\u001b[39m    padd\\\\n \\\\u001b[90m     | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 168 | \\\\u001b[39m\\\\n \\\\u001b[90m 169 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[111]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=home.component.css.map*/\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","AlertdialogComponent","i0","HomeComponent","constructor","formBuilder","dialog","ngOnInit","todoForm","group","task","required","dueDate","priority","showTaskCreation","actionVisible","btnvisible","get","isFormValid","formControls","controls","controlName","hasOwnProperty","value","openAlert","dialogRef","open","width","data","message","onSubmit","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\home\\home.component.ts","C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { AlertdialogComponent } from '../alertdialog/alertdialog.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements  OnInit{\n  dialogRef!: MatDialogRef<any>;\n\n  taskCreationVisible: boolean = false;\n  actionVisible:boolean=false;\n  btnvisible:boolean=true;\n  todoForm!: FormGroup;\n                constructor(private formBuilder: FormBuilder, private dialog: MatDialog)\n                {\n\n                }\n                ngOnInit() {\n                      this.todoForm = this.formBuilder.group({\n                        task: ['', Validators.required],\n                        dueDate: [''],\n                        priority: [''],\n                       \n                      });\n                }\n  showTaskCreation() {\n    // this.taskCreationVisible = true;\n    this.actionVisible=true;\n    this.btnvisible=false;\n  }\n\n  get task() {\n    return this.todoForm.get('task');\n  }\n\n  isFormValid() {\n    const formControls = this.todoForm.controls;\n    for (const controlName in formControls) {\n      if (formControls.hasOwnProperty(controlName) && formControls[controlName].value === '') {\n        return false;\n      }\n    }\n    return true;\n  }\n  \n\n  openAlert() {\n    this.dialogRef = this.dialog.open(AlertdialogComponent, {\n      width: '300px', // Customize the width as per your needs\n      data: { message: 'Please fill all fields.' } // Pass any additional data to the dialog\n    });\n  }\n\n  onSubmit(){\n    this.openAlert();\n    if (!this.isFormValid()) {\n      this.openAlert();\n      return;\n    }\n    console.log(this.todoForm.value);\n  }\n\n}\n","<body>\n<div class=\"container\">\n    <div class=\"card shadow p-2 mb-5 bg-white rounded\">\n        \n        \n      <div class=\"card-body\"><br>\n        <h5 class=\"card-title\">TaskTracker</h5><br>\n        <hr class=\"card-divider\"> \n       <br>\n        <p  *ngIf=\"btnvisible\" class=\"card-text\">Stay organized and boost your productivity with TaskTracker</p>\n        <button class=\"action-button\" *ngIf=\"btnvisible\" (click)=\"showTaskCreation()\">Get Started</button>\n        <div *ngIf=\"actionVisible\">\n            \n            <div class=\"card-body\">\n                <br>\n             <button class=\"get-started-button align-right\">View Tasks</button>\n             <button class=\"get-started-button align-right\">Add Tasks</button>\n            </div>\n            \n         </div>  \n\n\n<div *ngIf=\"taskCreationVisible\">\n <form formGroup=\"todoForm\" (ngSubmit)=\"onSubmit()\" class=\"mat-form\">\n   <div class=\"mat-form-field\">\n    <label>Task</label>\n     <input type=\"text\" formControlName=\"task\" placeholder=\"Enter a new task\" class=\"mat-input\" [required]=\"true\" >\n     <div *ngIf=\"todoForm.get('task')?.invalid && (todoForm.get('task')?.dirty || todoForm.get('task')?.touched)\">\n        <div *ngIf=\"todoForm.get('task')?.errors?.['required']\" class=\"error-message\">Task is required</div>\n      </div>\n      \n      \n   </div>\n \n   <div class=\"mat-form-field\">\n    <label>Due Date </label>\n     <input type=\"date\" formControlName=\"dueDate\" placeholder=\"Due Date\" class=\"mat-input\">\n   </div>\n \n   <div class=\"mat-form-field\">\n    <label>Priority</label>\n     <select formControlName=\"priority\" class=\"mat-select\">\n       <option value=\"\" disabled selected>Select Priority</option>\n       <option value=\"low\">Low</option>\n       <option value=\"medium\">Medium</option>\n       <option value=\"high\">High</option>\n     </select>\n   </div>\n \n   \n <br>\n   <button type=\"submit\" class=\"get-started-button align-right\">Add Task</button>\n </form>\n \n        </div>\n      </div>\n\n    </div>\n  </div>\n\n</body>\n  \n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}