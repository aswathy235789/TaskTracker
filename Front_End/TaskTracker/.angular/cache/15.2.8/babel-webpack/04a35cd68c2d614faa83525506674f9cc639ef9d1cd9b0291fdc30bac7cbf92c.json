{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../task.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/forms\";\nfunction ViewtasksComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ViewtasksComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.AddTasks());\n    });\n    i0.ɵɵtext(2, \"Add Tasks\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ViewtasksComponent_div_6_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Due Date: \", i0.ɵɵpipeBind1(3, 3, task_r4.dueDate), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Priority: \", task_r4.priority, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", task_r4.status, \"\");\n  }\n}\nfunction ViewtasksComponent_div_6_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"Due Date: \");\n    i0.ɵɵelementStart(3, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewtasksComponent_div_6_ng_container_6_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r4.dueDate = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"Priority: \");\n    i0.ɵɵelementStart(6, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewtasksComponent_div_6_ng_container_6_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r4.priority = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Status: \");\n    i0.ɵɵelementStart(9, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewtasksComponent_div_6_ng_container_6_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(task_r4.status = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const task_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", task_r4.dueDate);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", task_r4.priority);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", task_r4.status);\n  }\n}\nfunction ViewtasksComponent_div_6_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ViewtasksComponent_div_6_button_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.editTask(task_r4));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"edit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ViewtasksComponent_div_6_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ViewtasksComponent_div_6_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.deleteTask(task_r4.id));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ViewtasksComponent_div_6_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ViewtasksComponent_div_6_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const task_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.saveTask(task_r4));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"check\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ViewtasksComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵtemplate(5, ViewtasksComponent_div_6_ng_container_5_Template, 8, 5, \"ng-container\", 11);\n    i0.ɵɵtemplate(6, ViewtasksComponent_div_6_ng_container_6_Template, 10, 3, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 12);\n    i0.ɵɵtemplate(8, ViewtasksComponent_div_6_button_8_Template, 3, 0, \"button\", 13);\n    i0.ɵɵtemplate(9, ViewtasksComponent_div_6_button_9_Template, 3, 0, \"button\", 14);\n    i0.ɵɵtemplate(10, ViewtasksComponent_div_6_button_10_Template, 3, 0, \"button\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(task_r4.task);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r4.isEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r4.isEditing);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !task_r4.isEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !task_r4.isEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", task_r4.isEditing);\n  }\n}\nexport class ViewtasksComponent {\n  constructor(router, taskService, http) {\n    this.router = router;\n    this.taskService = taskService;\n    this.http = http;\n    this.AddVisible = true;\n  }\n  ngOnInit() {\n    this.refresh();\n  }\n  editTask(task) {\n    task.isEditing = true;\n  }\n  saveTask(task) {\n    task.isEditing = false;\n    // Call the API to update the task with the new values (if required)\n    // this.taskService.updateTask(task).subscribe(...);\n  }\n\n  refresh() {\n    this.taskService.getAllTasks().subscribe(response => {\n      console.log(response);\n      this.tasks = response;\n    }, error => {\n      console.log(error);\n    });\n  }\n  deleteTask(id) {\n    this.taskService.deleteTask(id).subscribe(response => {\n      this.refresh();\n    }, error => {\n      this.refresh();\n    });\n  }\n  AddTasks() {\n    this.router.navigate(['/home']);\n  }\n}\nViewtasksComponent.ɵfac = function ViewtasksComponent_Factory(t) {\n  return new (t || ViewtasksComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nViewtasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewtasksComponent,\n  selectors: [[\"app-viewtasks\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[1, \"header\"], [1, \"header-left\"], [\"class\", \"header-right\", 4, \"ngIf\"], [1, \"task-container\"], [1, \"task-list\"], [\"class\", \"task-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"header-right\"], [1, \"view-tasks-button\", 3, \"click\"], [1, \"task-card\"], [1, \"task-header\"], [1, \"task-info\"], [4, \"ngIf\"], [1, \"task-actions\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"date\", 1, \"mat-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", 1, \"mat-input\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n  template: function ViewtasksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ViewtasksComponent_div_2_Template, 3, 0, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"body\")(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵtemplate(6, ViewtasksComponent_div_6_Template, 11, 6, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.AddVisible);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.MatIconButton, i6.MatIcon, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgModel, i4.DatePipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 719:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(107:5) C:\\\\\\\\Users\\\\\\\\235789\\\\\\\\Documents\\\\\\\\angular\\\\\\\\TaskTracker\\\\\\\\TaskTracker\\\\\\\\src\\\\\\\\app\\\\\\\\viewtasks\\\\\\\\viewtasks.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 105 | \\\\u001b[39m\\\\n \\\\u001b[90m 106 | \\\\u001b[39m  \\\\u001b[33m:\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39mng-deep \\\\u001b[33m.mat-input\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 107 | \\\\u001b[39m    bor\\\\n \\\\u001b[90m     | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 108 | \\\\u001b[39m   \\\\n \\\\u001b[90m 109 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[719]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=viewtasks.component.css.map*/\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ViewtasksComponent","constructor","router","taskService","http","ngOnInit","refresh","editTask","task","isEditing","saveTask","getAllTasks","subscribe","response","console","log","tasks","error","deleteTask","id","AddTasks","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\viewtasks\\viewtasks.component.html","C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\viewtasks\\viewtasks.component.ts"],"sourcesContent":["<div class=\"header\">\n  <div class=\"header-left\">\n    <!-- <h1>TaskTracker</h1> -->\n  </div>\n  <div class=\"header-right\" *ngIf=\"AddVisible\">\n    <button class=\"view-tasks-button\" (click)=\"AddTasks()\">Add Tasks</button>\n  </div>\n</div>\n\n<body>\n  <div class=\"task-container\">\n    <div class=\"task-list\">\n      <!-- Iterate over tasks fetched from the backend API -->\n      <div *ngFor=\"let task of tasks\" class=\"task-card\">\n        <div class=\"task-header\">\n          <h3>{{ task.task }}</h3>\n        </div>\n        <div class=\"task-info\">\n          <ng-container *ngIf=\"!task.isEditing\">\n            <p>Due Date: {{ task.dueDate | date }}</p>\n            <p>Priority: {{ task.priority }}</p>\n            <p>Status: {{ task.status }}</p>\n          </ng-container>\n          <ng-container *ngIf=\"task.isEditing\">\n           <p>Due Date: <input type=\"date\" [(ngModel)]=\"task.dueDate\" class=\"mat-input\"></p> \n          \n\n           <p>Priority: <input type=\"text\" [(ngModel)]=\"task.priority\" class=\"mat-input\"></p> \n           <p>Status: <input type=\"text\" [(ngModel)]=\"task.status\" class=\"mat-input\"></p> \n          </ng-container>\n        </div>\n        <div class=\"task-actions\">\n          <button mat-icon-button color=\"primary\" *ngIf=\"!task.isEditing\" (click)=\"editTask(task)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n          <button mat-icon-button color=\"warn\" *ngIf=\"!task.isEditing\" (click)=\"deleteTask(task.id)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n          <button mat-icon-button color=\"primary\" *ngIf=\"task.isEditing\" (click)=\"saveTask(task)\">\n            <mat-icon>check</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TaskService } from '../task.service';\nimport { Task } from '../task';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-viewtasks',\n  templateUrl: './viewtasks.component.html',\n  styleUrls: ['./viewtasks.component.css']\n})\nexport class ViewtasksComponent implements OnInit {\n  tasks!: Task[];\n\n  constructor(private router: Router, private taskService: TaskService, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  editTask(task: Task) {\n    task.isEditing = true;\n  }\n\n  saveTask(task: Task) {\n    task.isEditing = false;\n    // Call the API to update the task with the new values (if required)\n    // this.taskService.updateTask(task).subscribe(...);\n  }\n\n  refresh() {\n    this.taskService.getAllTasks().subscribe(\n      (response: Task[]) => {\n        console.log(response);\n        this.tasks = response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  deleteTask(id: number) {\n    this.taskService.deleteTask(id).subscribe(\n      (response) => {\n        this.refresh();\n      },\n      (error) => {\n        this.refresh();\n      }\n    );\n  }\n\n  AddVisible: boolean = true;\n\n  AddTasks() {\n    this.router.navigate(['/home']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}