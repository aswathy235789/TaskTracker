{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:8080/task\";\n  }\n  addTasks() {\n    return this.http.post(`${this.baseUrl}/add`, data);\n  }\n  getAllTasks() {\n    console.log(this.http.get(this.baseUrl));\n    return this.http.get(`${this.baseUrl}/view`);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADzB,YAAO,GAAC,4BAA4B;EACK;EACxCC,QAAQ;IAEN,OAAO,IAAI,CAACD,IAAI,CAACE,IAAI,CAAO,GAAG,IAAI,CAACC,OAAO,MAAM,EAACC,IAAI,CAAC;EACzD;EAEAC,WAAW;IAETC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAS,IAAI,CAACL,OAAO,CAAC,CAAC;IAChD,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAS,GAAG,IAAI,CAACL,OAAO,OAAO,CAAC;EACtD;EAEAM,UAAU,CAACC,EAAS;IAElB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACR,OAAO,gBAAgBO,EAAE,EAAE,CAAC;EAC9D;;AAnBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAJV;AAAM","names":["TaskService","constructor","http","addTasks","post","baseUrl","data","getAllTasks","console","log","get","deleteTask","id","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\235789\\Documents\\angular\\TaskTracker\\TaskTracker\\src\\app\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Task } from './task';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class TaskService {\n\n\n baseUrl=\"http://localhost:8080/task\"\n  constructor(private http: HttpClient) { }\n  addTasks():Observable<Task>\n  {\n    return this.http.post<Task>(`${this.baseUrl}/add`,data)\n  }\n\n  getAllTasks():Observable<Task[]>\n  {\n    console.log(this.http.get<Task[]>(this.baseUrl));\n    return this.http.get<Task[]>(`${this.baseUrl}/view`);\n  }\n\n  deleteTask(id:number)\n  {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}